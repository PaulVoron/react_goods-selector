{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","cancelHandler","setState","selectHandler","good","isSelected","this","className","type","onClick","map","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,cAAgB,WACd,EAAKC,SAAS,CAAEF,aAAc,MANlC,EASEG,cAAgB,SAACC,GACX,EAAKL,MAAMC,eAAiBI,EAC9B,EAAKF,SAAS,CAAEF,aAAc,KAE9B,EAAKE,SAAS,CAAEF,aAAcI,KAbpC,EAiBEC,WAAa,SAACD,GACZ,OAAOA,IAAS,EAAKL,MAAMC,cAlB/B,4CAqBE,WAAU,IAAD,OACCA,EAAiBM,KAAKP,MAAtBC,aAER,OACE,uBAAMO,UAAU,oBAAhB,UACGP,EACC,qBAAIO,UAAU,sCAAd,UACGP,EACA,IAFH,cAKE,wBACE,UAAQ,cACRQ,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKL,mBAIlB,oBAAIM,UAAU,QAAd,+BAGF,uBAAOA,UAAU,QAAjB,SACE,gCACGV,EAAMa,KAAI,SAAAN,GAAI,OACb,qBAEE,UAAQ,OACRG,UACEI,IACE,CAAE,+BAAgCP,IAASJ,IALjD,UASE,6BACE,wBACEQ,KAAK,SACLC,QAAS,WACP,EAAKN,cAAcC,IAErB,UAAS,EAAKC,WAAWD,GACrB,eACA,YACJG,UAAW,EAAKF,WAAWD,GACvB,iBACA,SAVN,SAYG,EAAKC,WAAWD,GACb,IACA,QAIR,oBAAI,UAAQ,YAAYG,UAAU,eAAlC,SACGH,MA5BEA,iBA/CrB,GAAyBQ,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.34bdb706.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  cancelHandler = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  selectHandler = (good: string) => {\n    if (this.state.selectedGood === good) {\n      this.setState({ selectedGood: '' });\n    } else {\n      this.setState({ selectedGood: good });\n    }\n  };\n\n  isSelected = (good: string) => {\n    return good === this.state.selectedGood;\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {selectedGood ? (\n          <h1 className=\"title is-flex is-align-items-center\">\n            {selectedGood}\n            {' '}\n            is selected\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={this.cancelHandler}\n            />\n          </h1>\n        ) : (\n          <h1 className=\"title\">No goods selected</h1>\n        )}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => (\n              <tr\n                key={good}\n                data-cy=\"Good\"\n                className={\n                  classNames(\n                    { 'has-background-success-light': good === selectedGood },\n                  )\n                }\n              >\n                <td>\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      this.selectHandler(good);\n                    }}\n                    data-cy={this.isSelected(good)\n                      ? 'RemoveButton'\n                      : 'AddButton'}\n                    className={this.isSelected(good)\n                      ? 'button is-info'\n                      : 'button'}\n                  >\n                    {this.isSelected(good)\n                      ? '+'\n                      : '-'}\n                  </button>\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}